{"version":3,"file":"three-to-cannon.umd.js","sources":["../index.js"],"sourcesContent":["import { Box, ConvexPolyhedron, Cylinder, Shape, Sphere, Quaternion as CQuaternion, Trimesh, Vec3 } from 'cannon-es';\nimport { ConvexHull } from 'three/examples/jsm/math/ConvexHull.js';\nimport { Box3, BufferGeometry, Geometry, Math as _Math, Matrix4, Mesh, Quaternion, Vector3 } from 'three';\n\nvar PI_2 = Math.PI / 2;\n\nvar Type = {\n  BOX: 'Box',\n  CYLINDER: 'Cylinder',\n  SPHERE: 'Sphere',\n  HULL: 'ConvexPolyhedron',\n  MESH: 'Trimesh'\n};\n\n/**\n * Given a THREE.Object3D instance, creates a corresponding CANNON shape.\n * @param  {THREE.Object3D} object\n * @return {CANNON.Shape}\n */\nexport const threeToCannon = function (object, options) {\n  options = options || {};\n\n  var geometry;\n\n  if (options.type === Type.BOX) {\n    return createBoundingBoxShape(object);\n  } else if (options.type === Type.CYLINDER) {\n    return createBoundingCylinderShape(object, options);\n  } else if (options.type === Type.SPHERE) {\n    return createBoundingSphereShape(object, options);\n  } else if (options.type === Type.HULL) {\n    return createConvexPolyhedron(object);\n  } else if (options.type === Type.MESH) {\n    geometry = getGeometry(object);\n    return geometry ? createTrimeshShape(geometry) : null;\n  } else if (options.type) {\n    throw new Error('[CANNON.threeToCannon] Invalid type \"%s\".', options.type);\n  }\n\n  geometry = getGeometry(object);\n  if (!geometry) return null;\n\n  var type = geometry.metadata\n    ? geometry.metadata.type\n    : geometry.type;\n\n  switch (type) {\n    case 'BoxGeometry':\n    case 'BoxBufferGeometry':\n      return createBoxShape(geometry);\n    case 'CylinderGeometry':\n    case 'CylinderBufferGeometry':\n      return createCylinderShape(geometry);\n    case 'PlaneGeometry':\n    case 'PlaneBufferGeometry':\n      return createPlaneShape(geometry);\n    case 'SphereGeometry':\n    case 'SphereBufferGeometry':\n      return createSphereShape(geometry);\n    case 'TubeGeometry':\n    case 'Geometry':\n    case 'BufferGeometry':\n      return createBoundingBoxShape(object);\n    default:\n      console.warn('Unrecognized geometry: \"%s\". Using bounding box as shape.', geometry.type);\n      return createBoxShape(geometry);\n  }\n};\n\nthreeToCannon.Type = Type;\n\n/******************************************************************************\n * Shape construction\n */\n\n /**\n  * @param  {THREE.Geometry} geometry\n  * @return {CANNON.Shape}\n  */\n function createBoxShape (geometry) {\n   var vertices = getVertices(geometry);\n\n   if (!vertices.length) return null;\n\n   geometry.computeBoundingBox();\n   var box = geometry.boundingBox;\n   return new Box(new Vec3(\n     (box.max.x - box.min.x) / 2,\n     (box.max.y - box.min.y) / 2,\n     (box.max.z - box.min.z) / 2\n   ));\n }\n\n/**\n * Bounding box needs to be computed with the entire mesh, not just geometry.\n * @param  {THREE.Object3D} mesh\n * @return {CANNON.Shape}\n */\nfunction createBoundingBoxShape (object) {\n  var shape, localPosition,\n      box = new Box3();\n\n  var clone = object.clone();\n  clone.quaternion.set(0, 0, 0, 1);\n  clone.updateMatrixWorld();\n\n  box.setFromObject(clone);\n\n  if (!isFinite(box.min.lengthSq())) return null;\n\n  shape = new Box(new Vec3(\n    (box.max.x - box.min.x) / 2,\n    (box.max.y - box.min.y) / 2,\n    (box.max.z - box.min.z) / 2\n  ));\n\n  localPosition = box.translate(clone.position.negate()).getCenter(new Vector3());\n  if (localPosition.lengthSq()) {\n    shape.offset = localPosition;\n  }\n\n  return shape;\n}\n\n/**\n * Computes 3D convex hull as a CANNON.ConvexPolyhedron.\n * @param  {THREE.Object3D} mesh\n * @return {CANNON.Shape}\n */\nfunction createConvexPolyhedron (object) {\n  var i, vertices, faces, hull,\n      eps = 1e-4,\n      geometry = getGeometry(object);\n\n  if (!geometry || !geometry.vertices.length) return null;\n\n  // Perturb.\n  for (i = 0; i < geometry.vertices.length; i++) {\n    geometry.vertices[i].x += (Math.random() - 0.5) * eps;\n    geometry.vertices[i].y += (Math.random() - 0.5) * eps;\n    geometry.vertices[i].z += (Math.random() - 0.5) * eps;\n  }\n\n  // Compute the 3D convex hull.\n  hull = new ConvexHull().setFromObject(new Mesh(geometry));\n\n  // Convert from THREE.Vector3 to Vec3.\n  vertices = new Array(hull.vertices.length);\n  for (i = 0; i < hull.vertices.length; i++) {\n    vertices[i] = new Vec3(hull.vertices[i].x, hull.vertices[i].y, hull.vertices[i].z);\n  }\n\n  // Convert from THREE.Face to Array<number>.\n  faces = new Array(hull.faces.length);\n  for (i = 0; i < hull.faces.length; i++) {\n    faces[i] = [hull.faces[i].a, hull.faces[i].b, hull.faces[i].c];\n  }\n\n  return new ConvexPolyhedron(vertices, faces);\n}\n\n/**\n * @param  {THREE.Geometry} geometry\n * @return {CANNON.Shape}\n */\nfunction createCylinderShape (geometry) {\n  var shape,\n      params = geometry.metadata\n        ? geometry.metadata.parameters\n        : geometry.parameters;\n  shape = new Cylinder(\n    params.radiusTop,\n    params.radiusBottom,\n    params.height,\n    params.radialSegments\n  );\n\n  // Include metadata for serialization.\n  shape._type = Shape.types.CYLINDER; // Patch schteppe/cannon.js#329.\n  shape.radiusTop = params.radiusTop;\n  shape.radiusBottom = params.radiusBottom;\n  shape.height = params.height;\n  shape.numSegments = params.radialSegments;\n\n  shape.orientation = new CQuaternion();\n  shape.orientation.setFromEuler(_Math.degToRad(90), 0, 0, 'XYZ').normalize();\n  return shape;\n}\n\n/**\n * @param  {THREE.Object3D} object\n * @return {CANNON.Shape}\n */\nfunction createBoundingCylinderShape (object, options) {\n  var shape, height, radius,\n      box = new Box3(),\n      axes = ['x', 'y', 'z'],\n      majorAxis = options.cylinderAxis || 'y',\n      minorAxes = axes.splice(axes.indexOf(majorAxis), 1) && axes;\n\n  box.setFromObject(object);\n\n  if (!isFinite(box.min.lengthSq())) return null;\n\n  // Compute cylinder dimensions.\n  height = box.max[majorAxis] - box.min[majorAxis];\n  radius = 0.5 * Math.max(\n    box.max[minorAxes[0]] - box.min[minorAxes[0]],\n    box.max[minorAxes[1]] - box.min[minorAxes[1]]\n  );\n\n  // Create shape.\n  shape = new Cylinder(radius, radius, height, 12);\n\n  // Include metadata for serialization.\n  shape._type = Shape.types.CYLINDER; // Patch schteppe/cannon.js#329.\n  shape.radiusTop = radius;\n  shape.radiusBottom = radius;\n  shape.height = height;\n  shape.numSegments = 12;\n\n  shape.orientation = new CQuaternion();\n  shape.orientation.setFromEuler(\n    majorAxis === 'y' ? PI_2 : 0,\n    majorAxis === 'z' ? PI_2 : 0,\n    0,\n    'XYZ'\n  ).normalize();\n  return shape;\n}\n\n/**\n * @param  {THREE.Geometry} geometry\n * @return {CANNON.Shape}\n */\nfunction createPlaneShape (geometry) {\n  geometry.computeBoundingBox();\n  var box = geometry.boundingBox;\n  return new Box(new Vec3(\n    (box.max.x - box.min.x) / 2 || 0.1,\n    (box.max.y - box.min.y) / 2 || 0.1,\n    (box.max.z - box.min.z) / 2 || 0.1\n  ));\n}\n\n/**\n * @param  {THREE.Geometry} geometry\n * @return {CANNON.Shape}\n */\nfunction createSphereShape (geometry) {\n  var params = geometry.metadata\n    ? geometry.metadata.parameters\n    : geometry.parameters;\n  return new Sphere(params.radius);\n}\n\n/**\n * @param  {THREE.Object3D} object\n * @return {CANNON.Shape}\n */\nfunction createBoundingSphereShape (object, options) {\n  if (options.sphereRadius) {\n    return new Sphere(options.sphereRadius);\n  }\n  var geometry = getGeometry(object);\n  if (!geometry) return null;\n  geometry.computeBoundingSphere();\n  return new Sphere(geometry.boundingSphere.radius);\n}\n\n/**\n * @param  {THREE.Geometry} geometry\n * @return {CANNON.Shape}\n */\nfunction createTrimeshShape (geometry) {\n  var indices,\n      vertices = getVertices(geometry);\n\n  if (!vertices.length) return null;\n\n  indices = Object.keys(vertices).map(Number);\n  return new Trimesh(vertices, indices);\n}\n\n/******************************************************************************\n * Utils\n */\n\n/**\n * Returns a single geometry for the given object. If the object is compound,\n * its geometries are automatically merged.\n * @param {THREE.Object3D} object\n * @return {THREE.Geometry}\n */\nfunction getGeometry (object) {\n  var matrix, mesh,\n      meshes = getMeshes(object),\n      tmp = new Geometry(),\n      combined = new Geometry();\n\n  if (meshes.length === 0) return null;\n\n  // Apply scale  â€“ it can't easily be applied to a CANNON.Shape later.\n  if (meshes.length === 1) {\n    var position = new Vector3(),\n        quaternion = new Quaternion(),\n        scale = new Vector3();\n    if (meshes[0].geometry.isBufferGeometry) {\n      if (meshes[0].geometry.attributes.position\n          && meshes[0].geometry.attributes.position.itemSize > 2) {\n        tmp.fromBufferGeometry(meshes[0].geometry);\n      }\n    } else {\n      tmp = meshes[0].geometry.clone();\n    }\n    tmp.metadata = meshes[0].geometry.metadata;\n    meshes[0].updateMatrixWorld();\n    meshes[0].matrixWorld.decompose(position, quaternion, scale);\n    return tmp.scale(scale.x, scale.y, scale.z);\n  }\n\n  // Recursively merge geometry, preserving local transforms.\n  while ((mesh = meshes.pop())) {\n    mesh.updateMatrixWorld();\n    if (mesh.geometry.isBufferGeometry) {\n      if (mesh.geometry.attributes.position\n          && mesh.geometry.attributes.position.itemSize > 2) {\n        var tmpGeom = new Geometry();\n        tmpGeom.fromBufferGeometry(mesh.geometry);\n        combined.merge(tmpGeom, mesh.matrixWorld);\n        tmpGeom.dispose();\n      }\n    } else {\n      combined.merge(mesh.geometry, mesh.matrixWorld);\n    }\n  }\n\n  matrix = new Matrix4();\n  matrix.scale(object.scale);\n  combined.applyMatrix(matrix);\n  return combined;\n}\n\n/**\n * @param  {THREE.Geometry} geometry\n * @return {Array<number>}\n */\nfunction getVertices (geometry) {\n  if (!geometry.attributes) {\n    geometry = new BufferGeometry().fromGeometry(geometry);\n  }\n  return (geometry.attributes.position || {}).array || [];\n}\n\n/**\n * Returns a flat array of THREE.Mesh instances from the given object. If\n * nested transformations are found, they are applied to child meshes\n * as mesh.userData.matrix, so that each mesh has its position/rotation/scale\n * independently of all of its parents except the top-level object.\n * @param  {THREE.Object3D} object\n * @return {Array<THREE.Mesh>}\n */\nfunction getMeshes (object) {\n  var meshes = [];\n  object.traverse(function (o) {\n    if (o.type === 'Mesh') {\n      meshes.push(o);\n    }\n  });\n  return meshes;\n}\n"],"names":["PI_2","Math","PI","Type","BOX","CYLINDER","SPHERE","HULL","MESH","threeToCannon","object","options","geometry","type","createBoundingBoxShape","shape","height","radius","box","Box3","axes","majorAxis","cylinderAxis","minorAxes","splice","indexOf","setFromObject","isFinite","min","lengthSq","max","Cylinder","_type","Shape","types","radiusTop","radiusBottom","numSegments","orientation","CQuaternion","setFromEuler","normalize","createBoundingCylinderShape","sphereRadius","Sphere","getGeometry","computeBoundingSphere","boundingSphere","createBoundingSphereShape","i","vertices","faces","hull","length","x","random","y","z","ConvexHull","Mesh","Array","Vec3","a","b","c","ConvexPolyhedron","createConvexPolyhedron","indices","getVertices","Object","keys","map","Number","Trimesh","createTrimeshShape","Error","metadata","createBoxShape","params","parameters","radialSegments","_Math","degToRad","createCylinderShape","computeBoundingBox","boundingBox","Box","createPlaneShape","createSphereShape","console","warn","localPosition","clone","quaternion","set","updateMatrixWorld","translate","position","negate","getCenter","Vector3","offset","matrix","mesh","meshes","traverse","o","push","getMeshes","tmp","Geometry","combined","Quaternion","scale","isBufferGeometry","attributes","itemSize","fromBufferGeometry","matrixWorld","decompose","pop","tmpGeom","merge","dispose","Matrix4","applyMatrix","BufferGeometry","fromGeometry","array"],"mappings":"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"}